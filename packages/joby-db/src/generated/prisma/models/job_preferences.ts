
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
/* @ts-nocheck */
/**
 * This file exports the `job_preferences` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model job_preferences
 * 
 */
export type job_preferencesModel = runtime.Types.Result.DefaultSelection<Prisma.$job_preferencesPayload>

export type AggregateJob_preferences = {
  _count: Job_preferencesCountAggregateOutputType | null
  _avg: Job_preferencesAvgAggregateOutputType | null
  _sum: Job_preferencesSumAggregateOutputType | null
  _min: Job_preferencesMinAggregateOutputType | null
  _max: Job_preferencesMaxAggregateOutputType | null
}

export type Job_preferencesAvgAggregateOutputType = {
  id: number | null
  user_id: number | null
}

export type Job_preferencesSumAggregateOutputType = {
  id: number | null
  user_id: number | null
}

export type Job_preferencesMinAggregateOutputType = {
  id: number | null
  user_id: number | null
  job_preference: string | null
  created_at: Date | null
  updated_at: Date | null
}

export type Job_preferencesMaxAggregateOutputType = {
  id: number | null
  user_id: number | null
  job_preference: string | null
  created_at: Date | null
  updated_at: Date | null
}

export type Job_preferencesCountAggregateOutputType = {
  id: number
  user_id: number
  job_preference: number
  created_at: number
  updated_at: number
  _all: number
}


export type Job_preferencesAvgAggregateInputType = {
  id?: true
  user_id?: true
}

export type Job_preferencesSumAggregateInputType = {
  id?: true
  user_id?: true
}

export type Job_preferencesMinAggregateInputType = {
  id?: true
  user_id?: true
  job_preference?: true
  created_at?: true
  updated_at?: true
}

export type Job_preferencesMaxAggregateInputType = {
  id?: true
  user_id?: true
  job_preference?: true
  created_at?: true
  updated_at?: true
}

export type Job_preferencesCountAggregateInputType = {
  id?: true
  user_id?: true
  job_preference?: true
  created_at?: true
  updated_at?: true
  _all?: true
}

export type Job_preferencesAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which job_preferences to aggregate.
   */
  where?: Prisma.job_preferencesWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of job_preferences to fetch.
   */
  orderBy?: Prisma.job_preferencesOrderByWithRelationInput | Prisma.job_preferencesOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.job_preferencesWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` job_preferences from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` job_preferences.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned job_preferences
  **/
  _count?: true | Job_preferencesCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: Job_preferencesAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: Job_preferencesSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: Job_preferencesMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: Job_preferencesMaxAggregateInputType
}

export type GetJob_preferencesAggregateType<T extends Job_preferencesAggregateArgs> = {
      [P in keyof T & keyof AggregateJob_preferences]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateJob_preferences[P]>
    : Prisma.GetScalarType<T[P], AggregateJob_preferences[P]>
}




export type job_preferencesGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.job_preferencesWhereInput
  orderBy?: Prisma.job_preferencesOrderByWithAggregationInput | Prisma.job_preferencesOrderByWithAggregationInput[]
  by: Prisma.Job_preferencesScalarFieldEnum[] | Prisma.Job_preferencesScalarFieldEnum
  having?: Prisma.job_preferencesScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: Job_preferencesCountAggregateInputType | true
  _avg?: Job_preferencesAvgAggregateInputType
  _sum?: Job_preferencesSumAggregateInputType
  _min?: Job_preferencesMinAggregateInputType
  _max?: Job_preferencesMaxAggregateInputType
}

export type Job_preferencesGroupByOutputType = {
  id: number
  user_id: number
  job_preference: string | null
  created_at: Date | null
  updated_at: Date | null
  _count: Job_preferencesCountAggregateOutputType | null
  _avg: Job_preferencesAvgAggregateOutputType | null
  _sum: Job_preferencesSumAggregateOutputType | null
  _min: Job_preferencesMinAggregateOutputType | null
  _max: Job_preferencesMaxAggregateOutputType | null
}

type GetJob_preferencesGroupByPayload<T extends job_preferencesGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<Job_preferencesGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof Job_preferencesGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], Job_preferencesGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], Job_preferencesGroupByOutputType[P]>
      }
    >
  > 



export type job_preferencesWhereInput = {
  AND?: Prisma.job_preferencesWhereInput | Prisma.job_preferencesWhereInput[]
  OR?: Prisma.job_preferencesWhereInput[]
  NOT?: Prisma.job_preferencesWhereInput | Prisma.job_preferencesWhereInput[]
  id?: Prisma.IntFilter<"job_preferences"> | number
  user_id?: Prisma.IntFilter<"job_preferences"> | number
  job_preference?: Prisma.StringNullableFilter<"job_preferences"> | string | null
  created_at?: Prisma.DateTimeNullableFilter<"job_preferences"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableFilter<"job_preferences"> | Date | string | null
  user?: Prisma.XOR<Prisma.UsersScalarRelationFilter, Prisma.usersWhereInput>
}

export type job_preferencesOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  job_preference?: Prisma.SortOrderInput | Prisma.SortOrder
  created_at?: Prisma.SortOrderInput | Prisma.SortOrder
  updated_at?: Prisma.SortOrderInput | Prisma.SortOrder
  user?: Prisma.usersOrderByWithRelationInput
}

export type job_preferencesWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  user_id?: number
  AND?: Prisma.job_preferencesWhereInput | Prisma.job_preferencesWhereInput[]
  OR?: Prisma.job_preferencesWhereInput[]
  NOT?: Prisma.job_preferencesWhereInput | Prisma.job_preferencesWhereInput[]
  job_preference?: Prisma.StringNullableFilter<"job_preferences"> | string | null
  created_at?: Prisma.DateTimeNullableFilter<"job_preferences"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableFilter<"job_preferences"> | Date | string | null
  user?: Prisma.XOR<Prisma.UsersScalarRelationFilter, Prisma.usersWhereInput>
}, "id" | "user_id">

export type job_preferencesOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  job_preference?: Prisma.SortOrderInput | Prisma.SortOrder
  created_at?: Prisma.SortOrderInput | Prisma.SortOrder
  updated_at?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.job_preferencesCountOrderByAggregateInput
  _avg?: Prisma.job_preferencesAvgOrderByAggregateInput
  _max?: Prisma.job_preferencesMaxOrderByAggregateInput
  _min?: Prisma.job_preferencesMinOrderByAggregateInput
  _sum?: Prisma.job_preferencesSumOrderByAggregateInput
}

export type job_preferencesScalarWhereWithAggregatesInput = {
  AND?: Prisma.job_preferencesScalarWhereWithAggregatesInput | Prisma.job_preferencesScalarWhereWithAggregatesInput[]
  OR?: Prisma.job_preferencesScalarWhereWithAggregatesInput[]
  NOT?: Prisma.job_preferencesScalarWhereWithAggregatesInput | Prisma.job_preferencesScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"job_preferences"> | number
  user_id?: Prisma.IntWithAggregatesFilter<"job_preferences"> | number
  job_preference?: Prisma.StringNullableWithAggregatesFilter<"job_preferences"> | string | null
  created_at?: Prisma.DateTimeNullableWithAggregatesFilter<"job_preferences"> | Date | string | null
  updated_at?: Prisma.DateTimeNullableWithAggregatesFilter<"job_preferences"> | Date | string | null
}

export type job_preferencesCreateInput = {
  job_preference?: string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
  user: Prisma.usersCreateNestedOneWithoutJob_preferencesInput
}

export type job_preferencesUncheckedCreateInput = {
  id?: number
  user_id: number
  job_preference?: string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
}

export type job_preferencesUpdateInput = {
  job_preference?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  user?: Prisma.usersUpdateOneRequiredWithoutJob_preferencesNestedInput
}

export type job_preferencesUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  user_id?: Prisma.IntFieldUpdateOperationsInput | number
  job_preference?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type job_preferencesCreateManyInput = {
  id?: number
  user_id: number
  job_preference?: string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
}

export type job_preferencesUpdateManyMutationInput = {
  job_preference?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type job_preferencesUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  user_id?: Prisma.IntFieldUpdateOperationsInput | number
  job_preference?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type Job_preferencesNullableScalarRelationFilter = {
  is?: Prisma.job_preferencesWhereInput | null
  isNot?: Prisma.job_preferencesWhereInput | null
}

export type job_preferencesCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  job_preference?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type job_preferencesAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
}

export type job_preferencesMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  job_preference?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type job_preferencesMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  job_preference?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type job_preferencesSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
}

export type job_preferencesCreateNestedOneWithoutUserInput = {
  create?: Prisma.XOR<Prisma.job_preferencesCreateWithoutUserInput, Prisma.job_preferencesUncheckedCreateWithoutUserInput>
  connectOrCreate?: Prisma.job_preferencesCreateOrConnectWithoutUserInput
  connect?: Prisma.job_preferencesWhereUniqueInput
}

export type job_preferencesUncheckedCreateNestedOneWithoutUserInput = {
  create?: Prisma.XOR<Prisma.job_preferencesCreateWithoutUserInput, Prisma.job_preferencesUncheckedCreateWithoutUserInput>
  connectOrCreate?: Prisma.job_preferencesCreateOrConnectWithoutUserInput
  connect?: Prisma.job_preferencesWhereUniqueInput
}

export type job_preferencesUpdateOneWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.job_preferencesCreateWithoutUserInput, Prisma.job_preferencesUncheckedCreateWithoutUserInput>
  connectOrCreate?: Prisma.job_preferencesCreateOrConnectWithoutUserInput
  upsert?: Prisma.job_preferencesUpsertWithoutUserInput
  disconnect?: Prisma.job_preferencesWhereInput | boolean
  delete?: Prisma.job_preferencesWhereInput | boolean
  connect?: Prisma.job_preferencesWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.job_preferencesUpdateToOneWithWhereWithoutUserInput, Prisma.job_preferencesUpdateWithoutUserInput>, Prisma.job_preferencesUncheckedUpdateWithoutUserInput>
}

export type job_preferencesUncheckedUpdateOneWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.job_preferencesCreateWithoutUserInput, Prisma.job_preferencesUncheckedCreateWithoutUserInput>
  connectOrCreate?: Prisma.job_preferencesCreateOrConnectWithoutUserInput
  upsert?: Prisma.job_preferencesUpsertWithoutUserInput
  disconnect?: Prisma.job_preferencesWhereInput | boolean
  delete?: Prisma.job_preferencesWhereInput | boolean
  connect?: Prisma.job_preferencesWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.job_preferencesUpdateToOneWithWhereWithoutUserInput, Prisma.job_preferencesUpdateWithoutUserInput>, Prisma.job_preferencesUncheckedUpdateWithoutUserInput>
}

export type job_preferencesCreateWithoutUserInput = {
  job_preference?: string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
}

export type job_preferencesUncheckedCreateWithoutUserInput = {
  id?: number
  job_preference?: string | null
  created_at?: Date | string | null
  updated_at?: Date | string | null
}

export type job_preferencesCreateOrConnectWithoutUserInput = {
  where: Prisma.job_preferencesWhereUniqueInput
  create: Prisma.XOR<Prisma.job_preferencesCreateWithoutUserInput, Prisma.job_preferencesUncheckedCreateWithoutUserInput>
}

export type job_preferencesUpsertWithoutUserInput = {
  update: Prisma.XOR<Prisma.job_preferencesUpdateWithoutUserInput, Prisma.job_preferencesUncheckedUpdateWithoutUserInput>
  create: Prisma.XOR<Prisma.job_preferencesCreateWithoutUserInput, Prisma.job_preferencesUncheckedCreateWithoutUserInput>
  where?: Prisma.job_preferencesWhereInput
}

export type job_preferencesUpdateToOneWithWhereWithoutUserInput = {
  where?: Prisma.job_preferencesWhereInput
  data: Prisma.XOR<Prisma.job_preferencesUpdateWithoutUserInput, Prisma.job_preferencesUncheckedUpdateWithoutUserInput>
}

export type job_preferencesUpdateWithoutUserInput = {
  job_preference?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type job_preferencesUncheckedUpdateWithoutUserInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  job_preference?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}



export type job_preferencesSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  user_id?: boolean
  job_preference?: boolean
  created_at?: boolean
  updated_at?: boolean
  user?: boolean | Prisma.usersDefaultArgs<ExtArgs>
}, ExtArgs["result"]["job_preferences"]>

export type job_preferencesSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  user_id?: boolean
  job_preference?: boolean
  created_at?: boolean
  updated_at?: boolean
  user?: boolean | Prisma.usersDefaultArgs<ExtArgs>
}, ExtArgs["result"]["job_preferences"]>

export type job_preferencesSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  user_id?: boolean
  job_preference?: boolean
  created_at?: boolean
  updated_at?: boolean
  user?: boolean | Prisma.usersDefaultArgs<ExtArgs>
}, ExtArgs["result"]["job_preferences"]>

export type job_preferencesSelectScalar = {
  id?: boolean
  user_id?: boolean
  job_preference?: boolean
  created_at?: boolean
  updated_at?: boolean
}

export type job_preferencesOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "user_id" | "job_preference" | "created_at" | "updated_at", ExtArgs["result"]["job_preferences"]>
export type job_preferencesInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.usersDefaultArgs<ExtArgs>
}
export type job_preferencesIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.usersDefaultArgs<ExtArgs>
}
export type job_preferencesIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.usersDefaultArgs<ExtArgs>
}

export type $job_preferencesPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "job_preferences"
  objects: {
    user: Prisma.$usersPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    user_id: number
    job_preference: string | null
    created_at: Date | null
    updated_at: Date | null
  }, ExtArgs["result"]["job_preferences"]>
  composites: {}
}

export type job_preferencesGetPayload<S extends boolean | null | undefined | job_preferencesDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$job_preferencesPayload, S>

export type job_preferencesCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<job_preferencesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: Job_preferencesCountAggregateInputType | true
  }

export interface job_preferencesDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['job_preferences'], meta: { name: 'job_preferences' } }
  /**
   * Find zero or one Job_preferences that matches the filter.
   * @param {job_preferencesFindUniqueArgs} args - Arguments to find a Job_preferences
   * @example
   * // Get one Job_preferences
   * const job_preferences = await prisma.job_preferences.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends job_preferencesFindUniqueArgs>(args: Prisma.SelectSubset<T, job_preferencesFindUniqueArgs<ExtArgs>>): Prisma.Prisma__job_preferencesClient<runtime.Types.Result.GetResult<Prisma.$job_preferencesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Job_preferences that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {job_preferencesFindUniqueOrThrowArgs} args - Arguments to find a Job_preferences
   * @example
   * // Get one Job_preferences
   * const job_preferences = await prisma.job_preferences.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends job_preferencesFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, job_preferencesFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__job_preferencesClient<runtime.Types.Result.GetResult<Prisma.$job_preferencesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Job_preferences that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {job_preferencesFindFirstArgs} args - Arguments to find a Job_preferences
   * @example
   * // Get one Job_preferences
   * const job_preferences = await prisma.job_preferences.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends job_preferencesFindFirstArgs>(args?: Prisma.SelectSubset<T, job_preferencesFindFirstArgs<ExtArgs>>): Prisma.Prisma__job_preferencesClient<runtime.Types.Result.GetResult<Prisma.$job_preferencesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Job_preferences that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {job_preferencesFindFirstOrThrowArgs} args - Arguments to find a Job_preferences
   * @example
   * // Get one Job_preferences
   * const job_preferences = await prisma.job_preferences.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends job_preferencesFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, job_preferencesFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__job_preferencesClient<runtime.Types.Result.GetResult<Prisma.$job_preferencesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Job_preferences that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {job_preferencesFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Job_preferences
   * const job_preferences = await prisma.job_preferences.findMany()
   * 
   * // Get first 10 Job_preferences
   * const job_preferences = await prisma.job_preferences.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const job_preferencesWithIdOnly = await prisma.job_preferences.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends job_preferencesFindManyArgs>(args?: Prisma.SelectSubset<T, job_preferencesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$job_preferencesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Job_preferences.
   * @param {job_preferencesCreateArgs} args - Arguments to create a Job_preferences.
   * @example
   * // Create one Job_preferences
   * const Job_preferences = await prisma.job_preferences.create({
   *   data: {
   *     // ... data to create a Job_preferences
   *   }
   * })
   * 
   */
  create<T extends job_preferencesCreateArgs>(args: Prisma.SelectSubset<T, job_preferencesCreateArgs<ExtArgs>>): Prisma.Prisma__job_preferencesClient<runtime.Types.Result.GetResult<Prisma.$job_preferencesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Job_preferences.
   * @param {job_preferencesCreateManyArgs} args - Arguments to create many Job_preferences.
   * @example
   * // Create many Job_preferences
   * const job_preferences = await prisma.job_preferences.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends job_preferencesCreateManyArgs>(args?: Prisma.SelectSubset<T, job_preferencesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Job_preferences and returns the data saved in the database.
   * @param {job_preferencesCreateManyAndReturnArgs} args - Arguments to create many Job_preferences.
   * @example
   * // Create many Job_preferences
   * const job_preferences = await prisma.job_preferences.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Job_preferences and only return the `id`
   * const job_preferencesWithIdOnly = await prisma.job_preferences.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends job_preferencesCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, job_preferencesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$job_preferencesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Job_preferences.
   * @param {job_preferencesDeleteArgs} args - Arguments to delete one Job_preferences.
   * @example
   * // Delete one Job_preferences
   * const Job_preferences = await prisma.job_preferences.delete({
   *   where: {
   *     // ... filter to delete one Job_preferences
   *   }
   * })
   * 
   */
  delete<T extends job_preferencesDeleteArgs>(args: Prisma.SelectSubset<T, job_preferencesDeleteArgs<ExtArgs>>): Prisma.Prisma__job_preferencesClient<runtime.Types.Result.GetResult<Prisma.$job_preferencesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Job_preferences.
   * @param {job_preferencesUpdateArgs} args - Arguments to update one Job_preferences.
   * @example
   * // Update one Job_preferences
   * const job_preferences = await prisma.job_preferences.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends job_preferencesUpdateArgs>(args: Prisma.SelectSubset<T, job_preferencesUpdateArgs<ExtArgs>>): Prisma.Prisma__job_preferencesClient<runtime.Types.Result.GetResult<Prisma.$job_preferencesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Job_preferences.
   * @param {job_preferencesDeleteManyArgs} args - Arguments to filter Job_preferences to delete.
   * @example
   * // Delete a few Job_preferences
   * const { count } = await prisma.job_preferences.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends job_preferencesDeleteManyArgs>(args?: Prisma.SelectSubset<T, job_preferencesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Job_preferences.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {job_preferencesUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Job_preferences
   * const job_preferences = await prisma.job_preferences.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends job_preferencesUpdateManyArgs>(args: Prisma.SelectSubset<T, job_preferencesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Job_preferences and returns the data updated in the database.
   * @param {job_preferencesUpdateManyAndReturnArgs} args - Arguments to update many Job_preferences.
   * @example
   * // Update many Job_preferences
   * const job_preferences = await prisma.job_preferences.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Job_preferences and only return the `id`
   * const job_preferencesWithIdOnly = await prisma.job_preferences.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends job_preferencesUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, job_preferencesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$job_preferencesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Job_preferences.
   * @param {job_preferencesUpsertArgs} args - Arguments to update or create a Job_preferences.
   * @example
   * // Update or create a Job_preferences
   * const job_preferences = await prisma.job_preferences.upsert({
   *   create: {
   *     // ... data to create a Job_preferences
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Job_preferences we want to update
   *   }
   * })
   */
  upsert<T extends job_preferencesUpsertArgs>(args: Prisma.SelectSubset<T, job_preferencesUpsertArgs<ExtArgs>>): Prisma.Prisma__job_preferencesClient<runtime.Types.Result.GetResult<Prisma.$job_preferencesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Job_preferences.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {job_preferencesCountArgs} args - Arguments to filter Job_preferences to count.
   * @example
   * // Count the number of Job_preferences
   * const count = await prisma.job_preferences.count({
   *   where: {
   *     // ... the filter for the Job_preferences we want to count
   *   }
   * })
  **/
  count<T extends job_preferencesCountArgs>(
    args?: Prisma.Subset<T, job_preferencesCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], Job_preferencesCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Job_preferences.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {Job_preferencesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends Job_preferencesAggregateArgs>(args: Prisma.Subset<T, Job_preferencesAggregateArgs>): Prisma.PrismaPromise<GetJob_preferencesAggregateType<T>>

  /**
   * Group by Job_preferences.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {job_preferencesGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends job_preferencesGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: job_preferencesGroupByArgs['orderBy'] }
      : { orderBy?: job_preferencesGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, job_preferencesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetJob_preferencesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the job_preferences model
 */
readonly fields: job_preferencesFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for job_preferences.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__job_preferencesClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  user<T extends Prisma.usersDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.usersDefaultArgs<ExtArgs>>): Prisma.Prisma__usersClient<runtime.Types.Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the job_preferences model
 */
export interface job_preferencesFieldRefs {
  readonly id: Prisma.FieldRef<"job_preferences", 'Int'>
  readonly user_id: Prisma.FieldRef<"job_preferences", 'Int'>
  readonly job_preference: Prisma.FieldRef<"job_preferences", 'String'>
  readonly created_at: Prisma.FieldRef<"job_preferences", 'DateTime'>
  readonly updated_at: Prisma.FieldRef<"job_preferences", 'DateTime'>
}
    

// Custom InputTypes
/**
 * job_preferences findUnique
 */
export type job_preferencesFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the job_preferences
   */
  select?: Prisma.job_preferencesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the job_preferences
   */
  omit?: Prisma.job_preferencesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.job_preferencesInclude<ExtArgs> | null
  /**
   * Filter, which job_preferences to fetch.
   */
  where: Prisma.job_preferencesWhereUniqueInput
}

/**
 * job_preferences findUniqueOrThrow
 */
export type job_preferencesFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the job_preferences
   */
  select?: Prisma.job_preferencesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the job_preferences
   */
  omit?: Prisma.job_preferencesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.job_preferencesInclude<ExtArgs> | null
  /**
   * Filter, which job_preferences to fetch.
   */
  where: Prisma.job_preferencesWhereUniqueInput
}

/**
 * job_preferences findFirst
 */
export type job_preferencesFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the job_preferences
   */
  select?: Prisma.job_preferencesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the job_preferences
   */
  omit?: Prisma.job_preferencesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.job_preferencesInclude<ExtArgs> | null
  /**
   * Filter, which job_preferences to fetch.
   */
  where?: Prisma.job_preferencesWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of job_preferences to fetch.
   */
  orderBy?: Prisma.job_preferencesOrderByWithRelationInput | Prisma.job_preferencesOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for job_preferences.
   */
  cursor?: Prisma.job_preferencesWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` job_preferences from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` job_preferences.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of job_preferences.
   */
  distinct?: Prisma.Job_preferencesScalarFieldEnum | Prisma.Job_preferencesScalarFieldEnum[]
}

/**
 * job_preferences findFirstOrThrow
 */
export type job_preferencesFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the job_preferences
   */
  select?: Prisma.job_preferencesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the job_preferences
   */
  omit?: Prisma.job_preferencesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.job_preferencesInclude<ExtArgs> | null
  /**
   * Filter, which job_preferences to fetch.
   */
  where?: Prisma.job_preferencesWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of job_preferences to fetch.
   */
  orderBy?: Prisma.job_preferencesOrderByWithRelationInput | Prisma.job_preferencesOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for job_preferences.
   */
  cursor?: Prisma.job_preferencesWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` job_preferences from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` job_preferences.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of job_preferences.
   */
  distinct?: Prisma.Job_preferencesScalarFieldEnum | Prisma.Job_preferencesScalarFieldEnum[]
}

/**
 * job_preferences findMany
 */
export type job_preferencesFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the job_preferences
   */
  select?: Prisma.job_preferencesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the job_preferences
   */
  omit?: Prisma.job_preferencesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.job_preferencesInclude<ExtArgs> | null
  /**
   * Filter, which job_preferences to fetch.
   */
  where?: Prisma.job_preferencesWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of job_preferences to fetch.
   */
  orderBy?: Prisma.job_preferencesOrderByWithRelationInput | Prisma.job_preferencesOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing job_preferences.
   */
  cursor?: Prisma.job_preferencesWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` job_preferences from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` job_preferences.
   */
  skip?: number
  distinct?: Prisma.Job_preferencesScalarFieldEnum | Prisma.Job_preferencesScalarFieldEnum[]
}

/**
 * job_preferences create
 */
export type job_preferencesCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the job_preferences
   */
  select?: Prisma.job_preferencesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the job_preferences
   */
  omit?: Prisma.job_preferencesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.job_preferencesInclude<ExtArgs> | null
  /**
   * The data needed to create a job_preferences.
   */
  data: Prisma.XOR<Prisma.job_preferencesCreateInput, Prisma.job_preferencesUncheckedCreateInput>
}

/**
 * job_preferences createMany
 */
export type job_preferencesCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many job_preferences.
   */
  data: Prisma.job_preferencesCreateManyInput | Prisma.job_preferencesCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * job_preferences createManyAndReturn
 */
export type job_preferencesCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the job_preferences
   */
  select?: Prisma.job_preferencesSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the job_preferences
   */
  omit?: Prisma.job_preferencesOmit<ExtArgs> | null
  /**
   * The data used to create many job_preferences.
   */
  data: Prisma.job_preferencesCreateManyInput | Prisma.job_preferencesCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.job_preferencesIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * job_preferences update
 */
export type job_preferencesUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the job_preferences
   */
  select?: Prisma.job_preferencesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the job_preferences
   */
  omit?: Prisma.job_preferencesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.job_preferencesInclude<ExtArgs> | null
  /**
   * The data needed to update a job_preferences.
   */
  data: Prisma.XOR<Prisma.job_preferencesUpdateInput, Prisma.job_preferencesUncheckedUpdateInput>
  /**
   * Choose, which job_preferences to update.
   */
  where: Prisma.job_preferencesWhereUniqueInput
}

/**
 * job_preferences updateMany
 */
export type job_preferencesUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update job_preferences.
   */
  data: Prisma.XOR<Prisma.job_preferencesUpdateManyMutationInput, Prisma.job_preferencesUncheckedUpdateManyInput>
  /**
   * Filter which job_preferences to update
   */
  where?: Prisma.job_preferencesWhereInput
  /**
   * Limit how many job_preferences to update.
   */
  limit?: number
}

/**
 * job_preferences updateManyAndReturn
 */
export type job_preferencesUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the job_preferences
   */
  select?: Prisma.job_preferencesSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the job_preferences
   */
  omit?: Prisma.job_preferencesOmit<ExtArgs> | null
  /**
   * The data used to update job_preferences.
   */
  data: Prisma.XOR<Prisma.job_preferencesUpdateManyMutationInput, Prisma.job_preferencesUncheckedUpdateManyInput>
  /**
   * Filter which job_preferences to update
   */
  where?: Prisma.job_preferencesWhereInput
  /**
   * Limit how many job_preferences to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.job_preferencesIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * job_preferences upsert
 */
export type job_preferencesUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the job_preferences
   */
  select?: Prisma.job_preferencesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the job_preferences
   */
  omit?: Prisma.job_preferencesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.job_preferencesInclude<ExtArgs> | null
  /**
   * The filter to search for the job_preferences to update in case it exists.
   */
  where: Prisma.job_preferencesWhereUniqueInput
  /**
   * In case the job_preferences found by the `where` argument doesn't exist, create a new job_preferences with this data.
   */
  create: Prisma.XOR<Prisma.job_preferencesCreateInput, Prisma.job_preferencesUncheckedCreateInput>
  /**
   * In case the job_preferences was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.job_preferencesUpdateInput, Prisma.job_preferencesUncheckedUpdateInput>
}

/**
 * job_preferences delete
 */
export type job_preferencesDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the job_preferences
   */
  select?: Prisma.job_preferencesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the job_preferences
   */
  omit?: Prisma.job_preferencesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.job_preferencesInclude<ExtArgs> | null
  /**
   * Filter which job_preferences to delete.
   */
  where: Prisma.job_preferencesWhereUniqueInput
}

/**
 * job_preferences deleteMany
 */
export type job_preferencesDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which job_preferences to delete
   */
  where?: Prisma.job_preferencesWhereInput
  /**
   * Limit how many job_preferences to delete.
   */
  limit?: number
}

/**
 * job_preferences without action
 */
export type job_preferencesDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the job_preferences
   */
  select?: Prisma.job_preferencesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the job_preferences
   */
  omit?: Prisma.job_preferencesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.job_preferencesInclude<ExtArgs> | null
}
