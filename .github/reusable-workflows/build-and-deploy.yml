name: Build and deploy service

on:
  workflow_call:
    inputs:
      project_id:
        required: true
        description: 'The GCP project ID'
        type: string
      artifact_repo:
        required: true
        description: 'The Artifact Registry repository'
        type: string
      service_name:
        required: true
        description: 'The name of the Cloud Run service to deploy'
        type: string
      branch_name:
        required: false
        description: 'The branch name of the adhoc deployment'
        type: string
      echo_service_url:
        required: false
        description: 'Whether to echo the service URL'
        type: boolean
      
    secrets:
      PROJECT_ID:
        required: true
      WORKLOAD_IDENTITY_PROVIDER:
        required: true
      SERVICE_ACCOUNT:
        required: true
      REGION:
        required: true

env:
  IMAGE: ${{ secrets.REGION }}-docker.pkg.dev/${{ inputs.project_id }}/${{ inputs.artifact_repo }}/${{ steps.full-service-name.outputs.service_name }}:latest

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - uses: ./.github/actions/gcp-warm-up
      with:
        project_id: ${{ secrets.PROJECT_ID }}
        workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.SERVICE_ACCOUNT }}
        region: ${{ secrets.REGION }}
        configure_docker: true

    - name: Get full service name
      id: full-service-name
      run: |
        if [ -z "${{ inputs.branch_name }}" ]; then
          echo "service_name=${{ inputs.service_name }}" >> $GITHUB_OUTPUT
        else
          echo "service_name=${{ inputs.branch_name }}-${{ inputs.service_name }}" >> $GITHUB_OUTPUT
        fi

    - name: Build Docker image
      run: |
        docker build -t ${{ env.IMAGE }} ./services/${{ inputs.service_name }}

    - name: Push Docker image to Google Artifact Registry
      run: |
        docker push ${{ env.IMAGE }}
    
    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy ${{ steps.full-service-name.outputs.service_name }}-service \
        --image=${{ env.IMAGE }} \
        --region=${{ secrets.REGION }} \
        --platform=managed \
        --allow-unauthenticated

    - name: Get Cloud Run Service URL
      if: ${{ inputs.echo_service_url }}
      run: |
        SERVICE_URL=$(gcloud run services describe ${{ steps.full-service-name.outputs.service_name }}-service \
          --platform managed \
          --region ${{ secrets.REGION }} \
          --format 'value(status.url)')
        echo "service_url=$SERVICE_URL" >> $GITHUB_OUTPUT
