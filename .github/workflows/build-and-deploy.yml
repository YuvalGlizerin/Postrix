name: Build and deploy service

permissions:
  contents: read
  id-token: write

# Environment variables to be set dynamically later in the workflow
env:
  PROJECT_ID: ''
  IMAGE: ''

on:
  workflow_call:
    inputs:
      environment:
        required: true
        description: 'The environment to deploy to'
        type: string
      service_name:
        required: true
        description: 'The name of the Cloud Run service to deploy'
        type: string
      namespace:
        required: true
        description: 'The k8s namespace of the deployment'
        type: string
      cluster_name:
        required: true
        description: 'The name of the Kubernetes cluster to authenticate to'
        type: string

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set Dynamic Environment Variables
      uses: actions/github-script@v7
      with:
        script: |
          const envVars = {
            dev: {
              PROJECT_ID: '${{ secrets.GCP_DEV_PROJECT_ID }}',
              IMAGE: '${{ vars.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_DEV_PROJECT_ID }}/${{ vars.GCP_DEV_ARTIFACT_REPO }}/${{ inputs.service_name }}'
            },
            prod: {
              PROJECT_ID: '${{ secrets.GCP_PROD_PROJECT_ID }}',
              IMAGE: '${{ vars.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROD_PROJECT_ID }}/${{ vars.GCP_PROD_ARTIFACT_REPO }}/${{ inputs.service_name }}'
            }
          };
          const selectedEnv = envVars['${{ inputs.environment }}'];
          core.exportVariable('PROJECT_ID', selectedEnv.PROJECT_ID);
          core.exportVariable('IMAGE', selectedEnv.IMAGE);

    - uses: ./.github/actions/gcp-warm-up
      with:
        project_id: ${{ env.PROJECT_ID }}
        workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.SERVICE_ACCOUNT }}
        install_components: 'beta,gke-gcloud-auth-plugin'
        region: ${{ vars.GCP_REGION }}
        configure_docker: true
        cluster_name: ${{ inputs.cluster_name }}

    - name: Repo Warm Up
      uses: ./.github/actions/repo-warm-up
      id: repo_warm_up

    - name: Build Docker image
      run: |
        docker build -t ${{ env.IMAGE }}:${{ steps.repo_warm_up.outputs.git_hash }} ./services/${{ inputs.service_name }}
        docker tag ${{ env.IMAGE }}:${{ steps.repo_warm_up.outputs.git_hash }} ${{ env.IMAGE }}:latest

    - name: Push Docker image to Google Artifact Registry
      run: |
        docker push ${{ env.IMAGE }}

    - name: Deploy to Kubernetes
      run: |
        helmfile sync -f kubernetes/helmfile.yaml \
          --environment=${{ inputs.environment }} \
          --namespace=${{ inputs.namespace }} \
          -l app=${{ inputs.service_name }} \
          --set ingress.host=${{ inputs.namespace }}-${{ inputs.service_name }}.${{ inputs.environment }}.postrix.io
